{"ast":null,"code":"var _jsxFileName = \"/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/page/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Link, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/eventss\");\n  if (!response.ok) {\n    throw new Response(JSon.stringify({\n      message: \"Could not fetch events.\",\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Link","useLoaderData","EventsList","EventsPage","data","events","loader","response","fetch","ok","Response","JSon","stringify","message","status"],"sources":["/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/page/EventsPage.js"],"sourcesContent":["import { Link, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventsPage = () => {\n  const data = useLoaderData();\n  const events = data.events;\n\n  return <EventsList events={events}></EventsList>;\n};\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/eventss\");\n\n  if (!response.ok) {\n    throw new Response(\n      JSon.stringify({ message: \"Could not fetch events.\", status: 500 })\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAElD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,IAAI,GAAGH,aAAa,EAAE;EAC5B,MAAMI,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAO,QAAC,UAAU;IAAC,MAAM,EAAEA;EAAO;IAAA;IAAA;IAAA;EAAA,QAAc;AAClD,CAAC;AAAC,GALIF,UAAU;EAAA,QACDF,aAAa;AAAA;AAAA,KADtBE,UAAU;AAOhB,eAAeA,UAAU;AAEzB,OAAO,eAAeG,MAAM,GAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE,yBAAyB;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC,CACpE;EACH,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}