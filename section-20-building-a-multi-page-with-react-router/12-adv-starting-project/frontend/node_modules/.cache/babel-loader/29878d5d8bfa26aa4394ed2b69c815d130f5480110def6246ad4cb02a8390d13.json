{"ast":null,"code":"var _jsxFileName = \"/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/HomePage\";\nimport EventsPage, { loader as eventsLoader } from \"./page/EventsPage\";\nimport NewEventPage from \"./page/NewEventPage\";\nimport RootLayout from \"./page/RootLayout\";\nimport EventDetailPage, { loader as eventDetailsLoader, action as deleteEventAction } from \"./page/EventDetailPage\";\nimport EditEventPage from \"./page/EditEventPage\";\nimport EventRootLayout from \"./page/EventRootLayout\";\nimport ErrorPage from \"./page/ErrorPage\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport AuthenticationPage, { action as AuthenticateAction } from \"./page/AuthenticationPage\";\nimport { action as actionLogout } from './page/Logout';\nimport { tokenLoader, checkAuthLoader } from './utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 14\n  }, this),\n  id: 'root',\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }, this),\n  loader: tokenLoader,\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":id\",\n      id: \"event-detail\",\n      loader: eventDetailsLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction,\n        loader: checkAuthLoader\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction,\n      loader: checkAuthLoader\n    }]\n  }, {\n    path: \"auth\",\n    element: /*#__PURE__*/_jsxDEV(AuthenticationPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this),\n    action: AuthenticateAction\n  }, {\n    path: \"logout\",\n    action: actionLogout\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","loader","eventsLoader","NewEventPage","RootLayout","EventDetailPage","eventDetailsLoader","action","deleteEventAction","EditEventPage","EventRootLayout","ErrorPage","manipulateEventAction","AuthenticationPage","AuthenticateAction","actionLogout","tokenLoader","checkAuthLoader","router","path","element","id","errorElement","children","index","App"],"sources":["/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/HomePage\";\nimport EventsPage, { loader as eventsLoader } from \"./page/EventsPage\";\nimport NewEventPage from \"./page/NewEventPage\";\nimport RootLayout from \"./page/RootLayout\";\nimport EventDetailPage, {\n  loader as eventDetailsLoader,\n  action as deleteEventAction,\n} from \"./page/EventDetailPage\";\nimport EditEventPage from \"./page/EditEventPage\";\nimport EventRootLayout from \"./page/EventRootLayout\";\nimport ErrorPage from \"./page/ErrorPage\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport AuthenticationPage, {\n  action as AuthenticateAction,\n} from \"./page/AuthenticationPage\";\n\nimport {action as actionLogout } from './page/Logout'\nimport {tokenLoader, checkAuthLoader} from './utils/auth'\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    id: 'root',\n    errorElement: <ErrorPage />,\n    loader: tokenLoader,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":id\",\n            id: \"event-detail\",\n            loader: eventDetailsLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: \"edit\",\n                element: <EditEventPage />,\n                action: manipulateEventAction,\n                loader: checkAuthLoader\n              },\n            ],\n          },\n          {\n            path: \"new\",\n            element: <NewEventPage />,\n            action: manipulateEventAction,\n            loader: checkAuthLoader\n          },\n        ],\n      },\n      {\n        path: \"auth\",\n        element: <AuthenticationPage />,\n        action: AuthenticateAction,\n      },\n      {\n        path: \"logout\",\n        action: actionLogout,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,mBAAmB;AACtE,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,eAAe,IACpBJ,MAAM,IAAIK,kBAAkB,EAC5BC,MAAM,IAAIC,iBAAiB,QACtB,wBAAwB;AAC/B,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASJ,MAAM,IAAIK,qBAAqB,QAAQ,wBAAwB;AACxE,OAAOC,kBAAkB,IACvBN,MAAM,IAAIO,kBAAkB,QACvB,2BAA2B;AAElC,SAAQP,MAAM,IAAIQ,YAAY,QAAQ,eAAe;AACrD,SAAQC,WAAW,EAAEC,eAAe,QAAO,cAAc;AAAA;AAEzD,MAAMC,MAAM,GAAGrB,mBAAmB,CAAC,CACjC;EACEsB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,EAAE,EAAE,MAAM;EACVC,YAAY,eAAE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;EAC3BrB,MAAM,EAAEe,WAAW;EACnBO,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEJ,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACtC;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAG;IAC5BG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXJ,OAAO,eAAE,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG;MACvBnB,MAAM,EAAEC;IACV,CAAC,EACD;MACEiB,IAAI,EAAE,KAAK;MACXE,EAAE,EAAE,cAAc;MAClBpB,MAAM,EAAEK,kBAAkB;MAC1BiB,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXJ,OAAO,eAAE,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA,QAAG;QAC5Bb,MAAM,EAAEC;MACV,CAAC,EACD;QACEW,IAAI,EAAE,MAAM;QACZC,OAAO,eAAE,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAG;QAC1Bb,MAAM,EAAEK,qBAAqB;QAC7BX,MAAM,EAAEgB;MACV,CAAC;IAEL,CAAC,EACD;MACEE,IAAI,EAAE,KAAK;MACXC,OAAO,eAAE,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG;MACzBb,MAAM,EAAEK,qBAAqB;MAC7BX,MAAM,EAAEgB;IACV,CAAC;EAEL,CAAC,EACD;IACEE,IAAI,EAAE,MAAM;IACZC,OAAO,eAAE,QAAC,kBAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;IAC/Bb,MAAM,EAAEO;EACV,CAAC,EACD;IACEK,IAAI,EAAE,QAAQ;IACdZ,MAAM,EAAEQ;EACV,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASU,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEP;EAAO;IAAA;IAAA;IAAA;EAAA,QAAkB;AAC1D;AAAC,KAFQO,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}