{"ast":null,"code":"var _jsxFileName = \"/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/page/NewEventPage.js\";\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  var data = request.formData();\n  var eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  var response = await fetch('http://localhost:8080/events/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application.json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      messsage: 'Could not save event',\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","NewEventPage","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","messsage","status"],"sources":["/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/page/NewEventPage.js"],"sourcesContent":["import EventForm from '../components/EventForm'\nimport { json, redirect } from 'react-router-dom';\nconst NewEventPage = () => {\n    return <EventForm/>\n}\n\nexport default NewEventPage\n\nexport async function action({request, params}){\n    var data = request.formData();\n    var eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description'),\n    }\n\n    var response = await fetch('http://localhost:8080/events/', {\n        method: 'POST',\n        headers: {'Content-Type': 'application.json'},\n        body: JSON.stringify(eventData)\n    })\n\n    if(!response.ok){\n        throw json({messsage: 'Could not save event' , status: 500})\n    }\n\n    return redirect('/events')\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAClD,MAAMC,YAAY,GAAG,MAAM;EACvB,oBAAO,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAE;AACvB,CAAC;AAAA,KAFKA,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeC,MAAM,OAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC;EAC1C,IAAIC,IAAI,GAAGF,OAAO,CAACG,QAAQ,EAAE;EAC7B,IAAIC,SAAS,GAAG;IACZC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,IAAII,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IACxDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAMrB,IAAI,CAAC;MAACsB,QAAQ,EAAE,sBAAsB;MAAGC,MAAM,EAAE;IAAG,CAAC,CAAC;EAChE;EAEA,OAAOtB,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}