{"ast":null,"code":"var _jsxFileName = \"/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useActionData } from \"react-router-dom\";\nimport { Form } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data && data.errors && Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"wUyIGhPTOsbm5MHCrKfFf74DEr4=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  var data = await request.formData();\n  var eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  console.log(\"data: \" + JSON.stringify(eventData));\n  const method = request.method;\n  let url = 'http://localhost:8080/events/';\n  let eventId = params.id;\n  if (method === 'PATCH') {\n    url = url + eventId;\n  }\n  var response = await fetch(url, {\n    method: {\n      method\n    },\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status == 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      messsage: 'Could not save event',\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","useActionData","Form","classes","json","redirect","EventForm","method","event","data","navigate","cancelHandler","form","errors","Object","values","map","err","title","image","date","description","actions","action","request","params","formData","eventData","get","console","log","JSON","stringify","url","eventId","id","response","fetch","headers","body","status","ok","messsage"],"sources":["/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-20-building-a-multi-page-with-react-router/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, useActionData } from \"react-router-dom\";\nimport { Form } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { json, redirect } from 'react-router-dom';\n\nfunction EventForm({ method, event }) {\n  const data = useActionData();\n  const navigate = useNavigate();\n\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <Form method={method} className={classes.form}>\n      <ul>\n        {data &&\n          data.errors &&\n          Object.values(data.errors).map((err) => <li>{err}</li>)}\n      </ul>\n\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event ? event.image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event ? event.date : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event ? event.description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        <button>Save</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({request, params}){\n  var data = await request.formData();\n  var eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description'),\n  }\n  console.log(\"data: \" + JSON.stringify(eventData));\n  const method = request.method;\n  let url = 'http://localhost:8080/events/';\n  let eventId = params.id\n  if(method === 'PATCH'){\n    url = url + eventId\n  }\n\n  var response = await fetch(url, {\n      method: {method},\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(eventData)\n  })\n\n  if (response.status == 422){\n      return response;\n  }\n\n  if(!response.ok){\n      throw json({messsage: 'Could not save event' , status: 500})\n  }\n\n  return redirect('/events')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}