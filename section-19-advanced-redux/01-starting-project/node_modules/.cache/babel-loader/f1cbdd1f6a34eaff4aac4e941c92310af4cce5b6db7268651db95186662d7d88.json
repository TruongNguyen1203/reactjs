{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(x => x.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          total: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.total += newItem.price;\n      }\n      state.totalQuantity++;\n    },\n    removeItemFromCart(state, action) {\n      const existingItem = state.items.find(x => x.id === action.payload);\n      if (!existingItem) {\n        return;\n      }\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(x => x.id !== existingItem.id);\n      } else {\n        existingItem.quantity -= 1;\n        existingItem.total -= existingItem.price;\n      }\n      state.totalQuantity -= 1;\n    }\n  }\n});\nexport const senCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending request...\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-56668-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data fail!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Add to cart successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Something went wrong when send request!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","x","id","push","price","quantity","total","title","removeItemFromCart","filter","senCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/Users/truongnguyen/code/reactjs/academin_reactjs/practice/section-19-advanced-redux/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {uiActions} from './ui-slice'\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((x) => x.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          total: newItem.price,\n          title: newItem.title,\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.total += newItem.price;\n      }\n      state.totalQuantity++;\n    },\n    removeItemFromCart(state, action) {\n      const existingItem = state.items.find((x) => x.id === action.payload);\n\n      if (!existingItem) {\n        return;\n      }\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((x) => x.id !== existingItem.id);\n      } else {\n        existingItem.quantity -= 1;\n        existingItem.total -= existingItem.price;\n      }\n\n      state.totalQuantity -= 1;\n    },\n  },\n});\n\nexport const senCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending request...\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-56668-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data fail!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"Add to cart successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Something went wrong when send request!\",\n        })\n      );\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}